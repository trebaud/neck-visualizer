{"version":3,"sources":["App.tsx","index.tsx"],"names":["Main","styled","main","Header","div","Title","span","Neck","Settings","Info","InfoTitle","Section","Label","label","Notes","ul","Note","li","props","color","ROOT_NOTES","TUNINGS","STANDARD","FOURTHS","SCALE_STATUS_MAP","major","augmented","diminished","STATUS_COLOR_MAP","root","App","value","defaultTuning","defaultScale","useState","rootNote","setRootNote","tuning","setTuning","scale","setScale","showNotes","setShowNotes","notes","scaleNotes","map","n","note","getNeckNotes","scaleStatuses","index","status","scaleName","find","s","skinType","nrOfFrets","selectedNotes","theme","statusMap","id","placeholder","onChange","option","options","checked","checkBoxStyle","checkedColor","size","unCheckedColor","duration","onClick","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.32cc8eee.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport Select from 'react-select';\nimport Fretboard, { scaleNotes } from 'react-fretboard';\nimport CheckBox from 'react-animated-checkbox';\nimport styled from 'styled-components';\n\nconst Main = styled.main`\n  display: grid;\n  grid-gap: 1rem;\n  grid-template-areas:\n    'header header'\n    'neck neck'\n    'settings info';\n\n  @media (max-width: 800px) {\n    grid-template-areas:\n      'header'\n      'neck'\n      'settings'\n      'info';\n  }\n`;\n\nconst Header = styled.div`\n  grid-area: header;\n  text-align: center;\n  padding: 2rem;\n`;\n\nconst Title = styled.span`\n  padding: 1rem;\n  font-size: 3rem;\n  color: #fff;\n`;\n\nconst Neck = styled.div`\n  grid-area: neck;\n  margin: 0 2rem;\n  padding: 2rem;\n  background-color: #fff;\n  opacity: 0.8;\n  border-radius: 0.25rem;\n`;\n\nconst Settings = styled.div`\n  grid-area: settings;\n  padding: 2rem;\n  margin: 2rem 0 3rem 2rem;\n  background-color: #fff;\n  opacity: 0.8;\n  border-radius: 0.25rem;\n`;\n\nconst Info = styled.div`\n  grid-area: info;\n  padding: 2rem;\n  margin: 2rem 2rem 3rem 0;\n  background-color: #fff;\n  opacity: 0.8;\n  margin-top: 2rem;\n  border-radius: 0.25rem;\n`;\n\nconst InfoTitle = styled.div`\n  font-size: 1.25rem;\n`;\n\nconst Section = styled.div`\n  margin-bottom: 2rem;\n`;\n\nconst Label = styled.label`\n  margin-left: 1rem;\n`;\n\nconst Notes = styled.ul`\n  list-style: none;\n  border-left: 4px solid aliceblue;\n`;\n\nconst Note = styled.li<{ color: string }>`\n  &::before {\n    content: 'â€¢';\n    font-weight: bold;\n    font-size: 2rem;\n    margin-right: 1rem;\n    color: ${props => props.color};\n  }\n`;\n\nconst ROOT_NOTES = ['C', 'G', 'D', 'A', 'E', 'B', 'F#', 'C#', 'G#', 'D#', 'A#', 'F'];\nconst TUNINGS = {\n  STANDARD: ['E2', 'A2', 'D3', 'G3', 'B3', 'E4'],\n  FOURTHS: ['E2', 'A2', 'D3', 'G3', 'C4', 'F4'],\n};\n\nconst SCALE_STATUS_MAP = {\n  major: ['root', '2M', '3M', '4P', '5P', '6M', '7M'],\n  'harmonic minor': ['root', '2M', '3m', '4P', '5P', '6m', '7M'],\n  'melodic minor': ['root', '2M', '3m', '4P', '5P', '6M', '7M'],\n  augmented: ['root'],\n  diminished: ['root'],\n};\n\nconst STATUS_COLOR_MAP = {\n  root: '#2196f3',\n  '2M': '#FFB6C1',\n  '3m': 'yellow',\n  '3M': '#6ec6ff',\n  '4P': '#32CD32',\n  '5P': '#9a67ea',\n  '6M': '#F08080',\n  '7m': 'red',\n  '7M': '#b9e59e',\n};\n\ntype OptionType = {\n  value: string;\n  label: string;\n};\n\nfunction App() {\n  const [defaultTuning] = getTuningOptions();\n  const [defaultScale] = getScaleOptions();\n\n  const [rootNote, setRootNote] = useState<OptionType>();\n  const [tuning, setTuning] = useState(defaultTuning);\n  const [scale, setScale] = useState(defaultScale);\n  const [showNotes, setShowNotes] = useState<boolean>(true);\n\n  const notes = rootNote?.value ? scaleNotes(rootNote?.value, scale?.value).map((n: any) => n.note) : [];\n\n  function getRootNoteOptions(): OptionType[] {\n    return ROOT_NOTES.map(note => ({\n      label: note,\n      value: note,\n    }));\n  }\n\n  function getTuningOptions(): OptionType[] {\n    return [\n      { value: 'STANDARD', label: 'Standard' },\n      { value: 'FOURTHS', label: 'All fourths' },\n    ];\n  }\n\n  function getScaleOptions() {\n    return [\n      { value: 'major', label: 'Major diatonic' },\n      { value: 'harmonic minor', label: 'Harmonic minor' },\n      { value: 'melodic minor', label: 'Melodic minor' },\n      { value: 'diminished', label: 'Diminished' },\n      { value: 'augmented', label: 'Augmented' },\n    ];\n  }\n\n  function getNeckNotes() {\n    const scaleStatuses = SCALE_STATUS_MAP[scale?.value];\n    return notes.map((note, index) => ({\n      note,\n      status: scaleStatuses[index],\n    }));\n  }\n\n  function handleChangeTuning(option) {\n    setTuning(option);\n  }\n\n  function handleChangeRootNote(option) {\n    setRootNote(option);\n  }\n\n  function handleChangeScale(option) {\n    setScale(option);\n  }\n\n  const scaleName = getScaleOptions().find(s => s.value === scale.value)?.label;\n\n  return (\n    <Main>\n      <Header>\n        <Title>ðŸŽ¸ Guitar Neck Visualizer ðŸŽ¸</Title>\n      </Header>\n      <Neck>\n        <Fretboard\n          skinType=\"strings\"\n          nrOfFrets={12}\n          tuning={TUNINGS[tuning?.value]}\n          showNotes={showNotes}\n          selectedNotes={getNeckNotes()}\n          theme={{ statusMap: STATUS_COLOR_MAP }}\n        />\n      </Neck>\n      <Settings>\n        <Section>\n          <label>Tuning</label>\n          <Select\n            id=\"tuning\"\n            value={tuning}\n            placeholder=\"Standard tuning by default\"\n            onChange={handleChangeTuning}\n            options={getTuningOptions()}\n          />\n        </Section>\n        <Section>\n          <label>Root note</label>\n          <Select\n            id=\"rootNote\"\n            value={rootNote}\n            placeholder=\"Select a root note\"\n            onChange={handleChangeRootNote}\n            options={getRootNoteOptions()}\n          />\n        </Section>\n        <Section>\n          <label>Scale</label>\n          <Select\n            id=\"scale\"\n            value={scale}\n            placeholder=\"Select a scale\"\n            onChange={handleChangeScale}\n            options={getScaleOptions()}\n          />\n        </Section>\n        <Section>\n          <CheckBox\n            checked={showNotes}\n            checkBoxStyle={{\n              checkedColor: '#b5cbbb',\n              size: 25,\n              unCheckedColor: '#b8b8b8',\n            }}\n            duration={400}\n            onClick={() => setShowNotes(!showNotes)}\n          />\n          <Label>Show notes</Label>\n        </Section>\n      </Settings>\n      <Info>\n        <Section>\n          <InfoTitle>{scaleName} scale:</InfoTitle>\n          <Notes>\n            {getNeckNotes().map(({ note, status }) => (\n              <Note key={note} color={STATUS_COLOR_MAP[status]}>\n                {status ? `${status}:` : ''} {note}\n              </Note>\n            ))}\n          </Notes>\n        </Section>\n      </Info>\n    </Main>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}